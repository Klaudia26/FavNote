{"version":3,"sources":["components/Header/HeaderNavigation.module.scss","components/Input/Input.module.scss","components/List/ListItem.module.scss","components/Form/Form.module.scss","components/Button/Button.module.scss","components/List/List.module.scss","components/Header/Header.module.scss","components/Modal/Modal.module.scss","components/Form/FormRadio.module.scss","components/Title/Title.module.scss","assets/images/logo.svg","context.js","components/Button/Button.jsx","components/Title/Title.jsx","components/List/ListItem.jsx","components/List/List.jsx","views/Root/ArticleView/ArticleView.jsx","views/Root/NotesView/NotesView.jsx","views/Root/TwitterView/TwitterView.jsx","components/Header/HeaderNavigation.jsx","components/Header/Header.jsx","components/Input/Input.jsx","components/Form/Radio.jsx","components/Form/Form.jsx","components/Modal/Modal.jsx","views/Root/Root.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","AppContext","React","createContext","Button","children","href","secondary","props","buttonClass","styles","button","className","target","rel","type","Title","heading","ListItem","image","title","description","link","ImageTag","wrapper","src","imageNone","alt","defaultProps","ListWrapper","items","length","map","item","key","noItem","ArticleView","Consumer","context","List","article","NotesView","note","TwitterView","twitter","HeaderNavigation","navItem","exact","activeClassName","navItemLinkActive","navItemLink","to","Header","openModalFn","logo","logoImage","onClick","Input","Tag","tag","name","label","maxLength","formItem","textarea","input","placeholder","id","htmlFor","formItemBar","propType","PropTypes","string","isRequired","number","Radio","checked","changeFn","radio","onChange","radioButton","types","descriptionObj","Form","state","handleRadioButtonChange","setState","handleInputChange","e","value","this","form","onSubmit","addItem","formOptions","Component","Modal","closeModalFn","Root","isModalOpen","newItem","preventDefault","prevState","closeModal","openModal","contextElement","Provider","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5becf6b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItem\":\"HeaderNavigation_navItem__3PLRX\",\"navItemLink\":\"HeaderNavigation_navItemLink__E8hUl\",\"navItemLinkActive\":\"HeaderNavigation_navItemLinkActive__2IhGP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formItem\":\"Input_formItem__36oWn\",\"formItemBar\":\"Input_formItemBar__31rV2\",\"label\":\"Input_label__3sEkI\",\"input\":\"Input_input__3rPb3\",\"textarea\":\"Input_textarea__CV6YU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ListItem_wrapper__3EJYa\",\"appear\":\"ListItem_appear__4iuqO\",\"image\":\"ListItem_image__3k_S9\",\"imageNone\":\"ListItem_imageNone__kddte\",\"description\":\"ListItem_description__1rU0P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Form_wrapper__3iDbh\",\"form\":\"Form_form__3wvE7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2Lf63\",\"secondary\":\"Button_secondary__1gv5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noItem\":\"List_noItem__6H-i_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__3tGRg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Modal_wrapper__3e00S\",\"button\":\"Modal_button__2HQ_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"FormRadio_radio__x2Xxv\",\"radioButton\":\"FormRadio_radioButton__2HwAk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Title_heading__2tsMq\"};","module.exports = __webpack_public_path__ + \"static/media/logo.1e47eba9.svg\";","import React from 'react';\n\nconst AppContext = React.createContext();\n\nexport default AppContext;\n","import React from 'react';\nimport styles from './Button.module.scss';\n\nconst Button = ({ children, href, secondary, ...props }) => {\n  const buttonClass = secondary ? styles.secondary : styles.button;\n  return (\n    <>\n      {href ? (\n        <a\n          className={buttonClass}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={href}\n        >\n          {' '}\n          {children}\n        </a>\n      ) : (\n        <button type=\"button\" className={buttonClass} {...props}>\n          {children}\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport styles from './Title.module.scss';\n\nconst Title = ({ children }) => <h2 className={styles.heading}>{children}</h2>;\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ListItem.module.scss';\nimport Button from '../Button/Button';\nimport Title from '../Title/Title';\n\nconst ListItem = ({ image, title, description, link }) => {\n  const ImageTag = image ? 'img' : 'div';\n\n  return (\n    <li className={styles.wrapper}>\n      {\n        <ImageTag\n          src={image}\n          className={image ? styles.image : styles.imageNone}\n          alt={title}\n        />\n      }\n      <div>\n        <Title>{title}</Title>\n        <p className={styles.description}>{description}</p>\n        {link && <Button href={link}>visit twitter page</Button>}\n      </div>\n    </li>\n  );\n};\n\nListItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  link: PropTypes.string,\n  image: PropTypes.string,\n};\n\nListItem.defaultProps = {\n  image: null,\n  link: null,\n};\n\nexport default ListItem;\n","import React from 'react';\nimport ListItem from './ListItem';\nimport styles from './List.module.scss';\n\nconst ListWrapper = ({ items }) => (\n  <>\n    {items.length ? (\n      <ul className={styles.wrapper}>\n        {items.map((item) => (\n          <ListItem key={item.title} {...item} />\n        ))}\n      </ul>\n    ) : (\n      <h1 className={styles.noItem}>\n        There's nothig here yet, please add some items!\n      </h1>\n    )}\n  </>\n);\n\nexport default ListWrapper;\n","import React from 'react';\nimport Context from '../../../context';\nimport List from '../../../components/List/List';\n\nconst ArticleView = () => (\n  <>\n    <Context.Consumer>\n      {(context) => <List items={context.article} />}\n    </Context.Consumer>\n  </>\n);\n\nexport default ArticleView;\n","import React from 'react';\nimport Context from '../../../context';\nimport List from '../../../components/List/List';\n\nconst NotesView = () => (\n  <>\n    <Context.Consumer>\n      {(context) => <List items={context.note} />}\n    </Context.Consumer>\n  </>\n);\n\nexport default NotesView;\n","import React from 'react';\nimport Context from '../../../context';\nimport List from '../../../components/List/List';\n\nconst TwitterView = () => (\n  <>\n    <Context.Consumer>\n      {(context) => <List items={context.twitter} />}\n    </Context.Consumer>\n  </>\n);\n\nexport default TwitterView;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './HeaderNavigation.module.scss';\n\nconst HeaderNavigation = () => (\n  <nav>\n    <ul className={styles.wrapper}>\n      <li className={styles.navItem}>\n        <NavLink\n          exact\n          activeClassName={styles.navItemLinkActive}\n          className={styles.navItemLink}\n          to=\"/\"\n        >\n          twitter\n        </NavLink>\n      </li>\n      <li className={styles.navItem}>\n        <NavLink\n          activeClassName={styles.navItemLinkActive}\n          className={styles.navItemLink}\n          to=\"/articles\"\n        >\n          articles\n        </NavLink>\n      </li>\n      <li className={styles.navItem}>\n        <NavLink\n          activeClassName={styles.navItemLinkActive}\n          className={styles.navItemLink}\n          to=\"/notes\"\n        >\n          notes\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default HeaderNavigation;\n","import React from 'react';\nimport HeaderNavigation from './HeaderNavigation';\nimport Button from '../Button/Button';\nimport styles from './Header.module.scss';\nimport logoImage from '../../assets/images/logo.svg';\n\nconst Header = ({ openModalFn }) => (\n  <header className={styles.wrapper}>\n    {/* <img src={logoImage} alt=\"FavNote\" /> */}\n    <img className={styles.logo} src={logoImage} alt=\"FavNote logo\" />\n    <div>\n      <HeaderNavigation />\n    </div>\n    <Button onClick={openModalFn} secondary>\n      new item\n    </Button>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Input.module.scss';\n\nconst Input = ({ tag: Tag, name, label, maxLength, ...props }) => (\n  <>\n    <div className={styles.formItem}>\n      <Tag\n        className={Tag === 'textarea' ? styles.textarea : styles.input}\n        placeholder=\"\"\n        name={name}\n        id={name}\n        maxLength={maxLength}\n        {...props}\n      />\n\n      <label className={styles.label} htmlFor={name}>\n        {label}\n      </label>\n      <div className={styles.formItemBar} />\n    </div>\n  </>\n);\n\nInput.propType = {\n  tag: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  maxLength: PropTypes.number,\n};\n\nInput.defaultProps = {\n  tag: 'input',\n  maxLength: 200,\n};\n\nexport default Input;\n","import React from 'react';\nimport styles from './FormRadio.module.scss';\n\nconst Radio = ({ id, checked, changeFn, children }) => (\n  <>\n    <label className={styles.radio} htmlFor={id}>\n      <input id={id} type=\"radio\" checked={checked} onChange={changeFn} />\n      <div className={styles.radioButton} />\n      {children}\n    </label>\n  </>\n);\n\nexport default Radio;\n","import React, { Component } from 'react';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button';\nimport Title from '../Title/Title';\nimport Radio from './Radio';\nimport AppContext from '../../context';\nimport styles from './Form.module.scss';\n\nconst types = {\n  twitter: 'twitter',\n  article: 'article',\n  note: 'note',\n};\n\nconst descriptionObj = {\n  twitter: 'favortie twitter acount',\n  article: 'article',\n  note: 'note',\n};\n\nclass Form extends Component {\n  state = {\n    type: types.twitter,\n    title: '',\n    link: '',\n    image: '',\n    description: '',\n  };\n\n  handleRadioButtonChange = (type) => {\n    this.setState({\n      type,\n    });\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  render() {\n    const { type, title, link, image, description } = this.state;\n    return (\n      <AppContext.Consumer>\n        {(context) => (\n          <div className={styles.wrapper}>\n            <form\n              className={styles.form}\n              onSubmit={(e) => context.addItem(e, this.state)}\n            >\n              <Title>Add new {descriptionObj[type]}</Title>\n              <div className={styles.formOptions}>\n                <Radio\n                  id={types.twitter}\n                  checked={type === types.twitter}\n                  changeFn={() => this.handleRadioButtonChange(types.twitter)}\n                >\n                  Twitter\n                </Radio>\n                <Radio\n                  id={types.article}\n                  checked={type === types.article}\n                  changeFn={() => this.handleRadioButtonChange(types.article)}\n                >\n                  Article\n                </Radio>\n                <Radio\n                  id={types.note}\n                  checked={type === types.note}\n                  changeFn={() => this.handleRadioButtonChange(types.note)}\n                >\n                  Note\n                </Radio>\n              </div>\n              <Input\n                onChange={this.handleInputChange}\n                value={title}\n                name=\"title\"\n                label={type === types.twitter ? 'Twitter Name' : 'Title'}\n              />\n              {type !== types.note ? (\n                <Input\n                  onChange={this.handleInputChange}\n                  value={link}\n                  name=\"link\"\n                  label={type === types.twitter ? 'Twitter Name' : 'Link'}\n                />\n              ) : null}\n\n              {type === types.twitter ? (\n                <Input\n                  onChange={this.handleInputChange}\n                  value={image}\n                  name=\"image\"\n                  label=\"Image\"\n                />\n              ) : null}\n              <Input\n                onChange={this.handleInputChange}\n                value={description}\n                tag=\"textarea\"\n                name=\"description\"\n                label=\"Description\"\n              />\n              <Button>Add new item</Button>\n            </form>\n          </div>\n        )}\n      </AppContext.Consumer>\n    );\n  }\n}\n\nexport default Form;\n","import React from 'react';\nimport styles from './Modal.module.scss';\nimport Form from '../Form/Form';\n\nconst Modal = ({ closeModalFn }) => (\n  <>\n    <div className={styles.wrapper}>\n      <button type=\"button\" className={styles.button} onClick={closeModalFn}>\n        X\n      </button>\n      <Form />\n    </div>\n  </>\n);\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport ArticleView from './ArticleView/ArticleView';\nimport AppContext from '../../context';\nimport NotesView from './NotesView/NotesView';\nimport TwitterView from './TwitterView/TwitterView';\nimport Header from '../../components/Header/Header';\nimport Modal from '../../components/Modal/Modal';\nimport './index.css';\n\nclass Root extends Component {\n  state = {\n    twitter: [],\n    article: [],\n    note: [],\n    isModalOpen: false,\n  };\n\n  addItem = (e, newItem) => {\n    e.preventDefault();\n\n    this.setState((prevState) => ({\n      [newItem.type]: [...prevState[newItem.type], newItem],\n    }));\n\n    this.closeModal();\n  };\n\n  openModal = () => {\n    this.setState({\n      isModalOpen: true,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      isModalOpen: false,\n    });\n  };\n\n  render() {\n    const { isModalOpen } = this.state;\n    const contextElement = {\n      ...this.state,\n      addItem: this.addItem,\n    };\n\n    return (\n      <BrowserRouter>\n        <AppContext.Provider value={contextElement}>\n          <>\n            <Header openModalFn={this.openModal} />\n            <Switch>\n              <Route exact path=\"/\" component={TwitterView} />\n              <Route path=\"/articles\" component={ArticleView} />\n              <Route path=\"/notes\" component={NotesView} />\n            </Switch>\n            {isModalOpen && <Modal closeModalFn={this.closeModal} />}\n          </>\n        </AppContext.Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './views/Root/Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}